apiVersion: v1
kind: Service
metadata:
  generateName: mongo
  labels:
    run: mongodb
  name: mongo
  namespace: default
spec:
  type: ClusterIP
  selector:
    run: mongodb
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  sessionAffinity: None
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    run: mongodb
  name: mongodb
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: mongodb
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: mongodb
    spec:
      containers:
      - image: renantmagalhaes/mongo-gcsfuse:1.0.3
        env:
        - name: MONGO-BACKUP-KEY
          valueFrom:
            secretKeyRef:
              name: mongo-backup-key
              key: YOURKEYFILE.json
        imagePullPolicy: Always
        name: mongodb
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
        volumeMounts:
        - mountPath: "/data/db"
          name: mongo-disk
        - mountPath: "/tmp/key"
          name: mongo-backup-key
        lifecycle:
          postStart:
            exec:
              command: ["gcsfuse", "--key-file", "/tmp/key/YOURKEYFILE.json", "-o", "nonempty", "YOUR-BUCKET-NAME", "/data/backup"]
          preStop:
            exec:
              command: ["fusermount", "-u", "/data/backup"]
        ports:
        - containerPort: 27017
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
        - name: mongo-disk
          persistentVolumeClaim:
            claimName: mongo-disk
        - name: mongo-backup-key
          secret:
            secretName: mongo-backup-key
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

